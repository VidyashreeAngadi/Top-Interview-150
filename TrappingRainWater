Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it can trap after raining.
Example 1:
Input: height = [0,1,0,2,1,0,1,3,2,1,2,1]
Output: 6
Explanation: The above elevation map (black section) is represented by array [0,1,0,2,1,0,1,3,2,1,2,1]. In this case, 6 units of rain water (blue section) are being trapped.
Example 2:
Input: height = [4,2,0,3,2,5]
Output: 9


class Solution:
    def trap(self, height: List[int]) -> int:
        result = 0
        deStack = []
        for right in range(len(height)):
            while deStack and height[right] > height[deStack[-1]]:
                bed = deStack.pop()
                if not deStack:
                    break
                left = deStack[-1]
                # height = min(height[left],height[right]) - height[bed]
                # width = right - 1 - left
                result += (min(height[left],height[right]) - height[bed]) * (right - 1 - left)
            deStack.append(right)
            
        return result
        
