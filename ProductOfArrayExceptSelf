Given an integer array nums, return an array answer such that answer[i] is equal to the product of all the elements of nums except nums[i].
The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer.
You must write an algorithm that runs in O(n) time and without using the division operation.
Example 1:
Input: nums = [1,2,3,4]
Output: [24,12,8,6]
Example 2:
Input: nums = [-1,1,0,-3,3]
Output: [0,0,9,0,0]

class Solution:
    def productExceptSelf(self, nums: List[int]) -> List[int]:
        total=1
        count=0
        for i in range(0,len(nums)):
            if nums[i]==0:
                count+=1
            else:
                total*=nums[i]
        if count>1:
            for i in range(0,len(nums)):
                nums[i]=0
        elif count==1:
            for i in range(0,len(nums)):
                if nums[i]==0:
                    nums[i]=total
                else:
                    nums[i]=0
        else:
            for i in range(0,len(nums)):
                nums[i]=total//nums[i]
        return nums
        
